# Configuração do banco de dados - funciona local e Heroku
spring.datasource.url=${JDBC_DATABASE_URL:jdbc:h2:mem:testdb}
spring.datasource.username=${JDBC_DATABASE_USERNAME:sa}
spring.datasource.password=${JDBC_DATABASE_PASSWORD:}

# Configuração do banco H2 para desenvolvimento local
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Força o uso do dialeto correto para PostgreSQL em produção, H2 em desenvolvimento
spring.jpa.database-platform=${JPA_DATABASE_PLATFORM:org.hibernate.dialect.H2Dialect}

# DDL (Data Definition Language)
# A chave para o sucesso! "update" verifica o que falta e cria/atualiza.
spring.jpa.hibernate.ddl-auto=update

# Estratégia de Nomenclatura
# Agora os nomes das propriedades Java correspondem exatamente aos nomes das colunas
# Não precisamos mais da CamelCaseToUnderscoresNamingStrategy
# spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy

# Opcional: Mostra os comandos SQL no log para depuração
spring.jpa.show-sql=true

# Configuração da porta do servidor
server.port=8101

# ======================================================
# CONFIGURAÇÃO DE ENVIO DE E-MAIL (SMTP - GMAIL)
# ======================================================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=admcefoods@gmail.com
spring.mail.password=bdty zfbq wyxn lfpw

# Propriedades adicionais
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true